/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import java.sql.Connection;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import proyecto.conexion;

/**
 *
 * @author bl250
 */
public class Principal extends javax.swing.JFrame {

    private String rolUsuario;
    private String nombreUsuario;

    /**
     * Creates new form Rol
     */
    public Principal() {
        initComponents(); // Inicializa los componentes de la GUI
        this.setExtendedState(this.MAXIMIZED_BOTH); // Maximiza la ventana

    }

    public Principal(String usuario, String rol) {
        initComponents(); // Inicializa los componentes de la GUI
        this.setExtendedState(this.MAXIMIZED_BOTH); // Maximiza la ventana

        this.nombreUsuario = usuario; // <-- GUARDAMOS EL NOMBRE DE USUARIO
        this.rolUsuario = rol; // Guardamos el rol (ya lo tenías)

        jlblBienvenida.setText("Usuario: " + usuario);
        jlblRol.setText("Rol: " + rol.toUpperCase());
        //jMenuItem4.setText("Usuario:" + usuario + "- Rol: " +rol.toUpperCase());

        // **NUEVO:** Llamada al método para aplicar las restricciones
        aplicarRestriccionesRol(rol);
    }

    // ===============================================
    //           LÓGICA DE ROLES
    // ===============================================
    private void aplicarRestriccionesRol(String rol) {
        // Normalizamos el rol a minúsculas para asegurar la comparación
        String rolLimpio = rol.toLowerCase();

        if ("secretaria".equals(rolLimpio)) {
            // Requisito: la secretaria solo tiene acceso a los Reportes.

            // 1. Deshabilitar el Menú "Ventana" (Contiene Inscripción y Estudiantes)
            jMenu1.setEnabled(false);

            // 2. Habilitar solo el Menú "Reportes" (Ya está habilitado por defecto, pero lo dejamos explícito)
            jMenu2.setEnabled(true);

        } else if ("administrador".equals(rolLimpio)) {
            // El administrador tiene acceso a todo. 
            jMenu1.setEnabled(true); // Ventana
            jMenu2.setEnabled(true); // Reportes
        } else {
            // Rol desconocido: deshabilitar todo
            jMenu1.setEnabled(false);
            jMenu2.setEnabled(false);
            jMenu3.setEnabled(false); // Salir (se recomienda dejar Salir)

            // CORRECCIÓN: Usamos la variable de clase 'this.nombreUsuario'
            jlblBienvenida.setText("Usuario: " + this.nombreUsuario + " | ROL DESCONOCIDO");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorioPrincipal = new javax.swing.JDesktopPane();
        jlblBienvenida = new javax.swing.JLabel();
        jlblRol = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));

        escritorioPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        escritorioPrincipal.setDesktopManager(null);

        jlblBienvenida.setBackground(new java.awt.Color(0, 0, 51));
        jlblBienvenida.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jlblBienvenida.setForeground(new java.awt.Color(255, 255, 255));
        jlblBienvenida.setText("jLabel1");

        jlblRol.setBackground(new java.awt.Color(0, 0, 0));
        jlblRol.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlblRol.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/verificar.png"))); // NOI18N

        escritorioPrincipal.setLayer(jlblBienvenida, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorioPrincipal.setLayer(jlblRol, javax.swing.JLayeredPane.DEFAULT_LAYER);
        escritorioPrincipal.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout escritorioPrincipalLayout = new javax.swing.GroupLayout(escritorioPrincipal);
        escritorioPrincipal.setLayout(escritorioPrincipalLayout);
        escritorioPrincipalLayout.setHorizontalGroup(
            escritorioPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escritorioPrincipalLayout.createSequentialGroup()
                .addContainerGap(675, Short.MAX_VALUE)
                .addGroup(escritorioPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, escritorioPrincipalLayout.createSequentialGroup()
                        .addGroup(escritorioPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlblRol, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblBienvenida, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, escritorioPrincipalLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(141, 141, 141))))
        );
        escritorioPrincipalLayout.setVerticalGroup(
            escritorioPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escritorioPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlblBienvenida)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlblRol, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 627, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 906, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 758, Short.MAX_VALUE)
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu1.setText("Ventana");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/expediente.png"))); // NOI18N
        jMenuItem1.setText("Estudiantes");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/inscripcion.png"))); // NOI18N
        jMenuItem2.setText("Inscripcion al Curso");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Reportes");

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cedula-de-identidad-con-foto-de-mujer.png"))); // NOI18N
        jMenuItem3.setText("Cedula");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/descripcion-general.png"))); // NOI18N
        jMenuItem4.setText("General");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/aula.png"))); // NOI18N
        jMenuItem5.setText("Curso");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/grafico-de-barras.png"))); // NOI18N
        jMenuItem6.setText("Grafico");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setMnemonic('S');
        jMenu3.setText("Exit ");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cerrar-sesion.png"))); // NOI18N
        jMenuItem7.setText("Salir");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cerrar-ventana.png"))); // NOI18N
        jMenuItem8.setText("Cerrar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorioPrincipal)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(escritorioPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 3, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Alumnos a = new Alumnos();
        escritorioPrincipal.add(a);
        a.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void mostrarReporteInterno(JasperPrint imprimir, String titulo) {
        // Crea un visor Jasper
        net.sf.jasperreports.swing.JRViewer visor = new net.sf.jasperreports.swing.JRViewer(imprimir);

        // Crea una ventana interna
        javax.swing.JInternalFrame frameReporte = new javax.swing.JInternalFrame(titulo, true, true, true, true);
        frameReporte.setSize(escritorioPrincipal.getSize());
        frameReporte.setClosable(true);
        frameReporte.setMaximizable(true);
        frameReporte.setIconifiable(true);
        frameReporte.setResizable(true);

        // Agrega el visor dentro de la ventana
        frameReporte.getContentPane().add(visor);
        frameReporte.setVisible(true);

        // Agrega la ventana al escritorio principal
        escritorioPrincipal.add(frameReporte);
        try {
            frameReporte.setMaximum(true); // opcional: abrir maximizado
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        InscripcionCurso i = new InscripcionCurso();
        escritorioPrincipal.add(i);
        i.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
         
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        conexion cc = new conexion();
        Connection cn = null;

        try {
            cn = cc.conectar();
            if (cn == null) {
                JOptionPane.showMessageDialog(this, "No se pudo establecer la conexión con la base de datos.", "Error de Conexión", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String rutaReporte = "/reportes/ReporteXCedula.jrxml";
            String cedulaIngresada = JOptionPane.showInputDialog(this, "Ingrese la cédula:");

            if (cedulaIngresada == null || cedulaIngresada.trim().isEmpty()) {
                return; // si cancelan o dejan vacío
            }

            Map<String, Object> parametros = new HashMap<>();
            parametros.put("cedula", cedulaIngresada);

            // Compilar el reporte desde .jrxml
            java.io.InputStream reporteStream = getClass().getResourceAsStream(rutaReporte);
            if (reporteStream == null) {
                JOptionPane.showMessageDialog(this, "No se pudo encontrar el archivo de reporte: " + rutaReporte, "Error de Reporte", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            JasperReport reporte = JasperCompileManager.compileReport(reporteStream);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);

            if (imprimir.getPages().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se encontraron resultados para la cédula ingresada.", "Reporte Vacío", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 👇 Mostrar dentro del escritorio
            mostrarReporteInterno(imprimir, "Reporte por Cédula");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al generar el reporte:\n" + e.getMessage(), "Error de Reporte", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            try {
                if (cn != null && !cn.isClosed()) {
                    cn.close();
                }
            } catch (Exception e) {
                System.err.println("Error al cerrar la conexión: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        conexion cc = new conexion();
        Connection cn = null;

        try {
            cn = cc.conectar();
            if (cn == null) {
                JOptionPane.showMessageDialog(this, "No se pudo establecer la conexión con la base de datos.", "Error de Conexión", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String rutaReporte = "/reportes/ReporteGeneral.jrxml";
            
            // Compilar el reporte desde .jrxml
            java.io.InputStream reporteStream = getClass().getResourceAsStream(rutaReporte);
            if (reporteStream == null) {
                JOptionPane.showMessageDialog(this, "No se pudo encontrar el archivo de reporte: " + rutaReporte, "Error de Reporte", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Parámetros básicos
            Map<String, Object> parametros = new HashMap<>();
            
            JasperReport reporte = JasperCompileManager.compileReport(reporteStream);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);

            if (imprimir.getPages().isEmpty()) {
                JOptionPane.showMessageDialog(this, "El reporte no generó páginas. Revisa la consulta SQL en tu reporte.", "Reporte Vacío", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 👇 AQUI CAMBIA: Mostrar dentro del escritorio
            mostrarReporteInterno(imprimir, "Reporte General");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al generar el reporte:\n" + e.getMessage(), "Error de Reporte", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            try {
                if (cn != null && !cn.isClosed()) {
                    cn.close();
                }
            } catch (Exception e) {
                System.err.println("Error al cerrar la conexión: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        conexion cc = new conexion();
        Connection cn = null;

        try {
            cn = cc.conectar();
            if (cn == null) {
                JOptionPane.showMessageDialog(this, "No se pudo establecer la conexión con la base de datos.", "Error de Conexión", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String rutaReporte = "/reportes/ReporteXCurso.jrxml";
            String cursoIngresado = JOptionPane.showInputDialog(this, "Ingrese el curso:");

            if (cursoIngresado == null || cursoIngresado.trim().isEmpty()) {
                return; // si cancelan o dejan vacío
            }

            Map<String, Object> parametros = new HashMap<>();
            parametros.put("curso", cursoIngresado);

            // Compilar el reporte desde .jrxml
            java.io.InputStream reporteStream = getClass().getResourceAsStream(rutaReporte);
            if (reporteStream == null) {
                JOptionPane.showMessageDialog(this, "No se pudo encontrar el archivo de reporte: " + rutaReporte, "Error de Reporte", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            JasperReport reporte = JasperCompileManager.compileReport(reporteStream);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);

            if (imprimir.getPages().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se encontraron resultados para el curso ingresado.", "Reporte Vacío", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 👇 Mostrar dentro del escritorio
            mostrarReporteInterno(imprimir, "Reporte por Curso");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al generar el reporte:\n" + e.getMessage(), "Error de Reporte", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            try {
                if (cn != null && !cn.isClosed()) {
                    cn.close();
                }
            } catch (Exception e) {
                System.err.println("Error al cerrar la conexión: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        conexion cc = new conexion();
        Connection cn = null;

        try {
            cn = cc.conectar();
            if (cn == null) {
                JOptionPane.showMessageDialog(this, "No se pudo establecer la conexión con la base de datos.", "Error de Conexión", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String rutaReporte = "/reportes/ReporteGrafica.jrxml";
            
            // Compilar el reporte desde .jrxml
            java.io.InputStream reporteStream = getClass().getResourceAsStream(rutaReporte);
            if (reporteStream == null) {
                JOptionPane.showMessageDialog(this, "No se pudo encontrar el archivo de reporte: " + rutaReporte, "Error de Reporte", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Parámetros básicos
            Map<String, Object> parametros = new HashMap<>();
            
            JasperReport reporte = JasperCompileManager.compileReport(reporteStream);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);

            if (imprimir.getPages().isEmpty()) {
                JOptionPane.showMessageDialog(this, "El reporte no generó páginas. Revisa la consulta SQL en tu reporte.", "Reporte Vacío", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 👇 AQUI CAMBIA: Mostrar dentro del escritorio
            mostrarReporteInterno(imprimir, "Reporte Grafico");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al generar el reporte:\n" + e.getMessage(), "Error de Reporte", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            try {
                if (cn != null && !cn.isClosed()) {
                    cn.close();
                }
            } catch (Exception e) {
                System.err.println("Error al cerrar la conexión: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane escritorioPrincipal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jlblBienvenida;
    private javax.swing.JLabel jlblRol;
    // End of variables declaration//GEN-END:variables
}
